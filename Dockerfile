# Dockerfile
# Используем официальный образ Node.js в качестве базового.
# '18-alpine' - это легкий образ на базе Alpine Linux, который отлично подходит для продакшена.
FROM node:18-alpine

# Устанавливаем рабочую директорию внутри контейнера.
# Все последующие команды будут выполняться относительно этой директории.
WORKDIR /app

# Копируем файлы package.json и package-lock.json (если есть)
# Это делается в первую очередь, чтобы Docker мог кэшировать установку зависимостей.
# Если эти файлы не меняются, Docker не будет переустанавливать зависимости.
COPY package*.json ./

# Устанавливаем зависимости Node.js.
# Используем --production для установки только продакшн-зависимостей,
# чтобы уменьшить размер образа и ускорить сборку.
RUN npm install --production

# Копируем остальной код приложения в рабочую директорию.
# Это должно быть сделано после установки зависимостей, чтобы использовать кэш Docker.
COPY . .

# Устанавливаем переменную среды для продакшн-режима.
# Это может оптимизировать работу Node.js/Express.
ENV NODE_ENV production

# Указываем, какой порт будет слушать приложение внутри контейнера.
# Это информативная инструкция, не публикует порт автоматически.
EXPOSE 3000

# Определяем команду для запуска приложения при старте контейнера.
# ["node", "index.js"] - это исполняемый файл и его аргументы.
CMD ["node", "index.js"]