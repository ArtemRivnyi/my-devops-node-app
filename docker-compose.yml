# docker-compose.yml
# Версия синтаксиса Docker Compose. Используем 3.3 для широкой совместимости.
version: '3.3'

# Секция 'services' определяет контейнеры, составляющие ваше приложение.
services:
  # Название вашего сервиса. Это будет именем контейнера в рамках Docker Compose сети.
  web:
    # Указываем, что Docker Compose должен собрать образ из Dockerfile,
    # который находится в текущей директории (.).
    build: .
    # Маппинг портов: <порт_на_хосте>:<порт_в_контейнере>.
    # Ваше Node.js приложение слушает на порту 3000 внутри контейнера.
    # Мы открываем порт 3000 на хост-машине, чтобы можно было обращаться к приложению.
    ports:
      - "3000:3000"
    # Маппинг томов: <путь_на_хосте>:<путь_в_контейнере>.
    # Это позволяет синхронизировать изменения в коде на хосте с кодом внутри контейнера.
    # Таким образом, вам не придется пересобирать образ при каждом изменении кода.
    # Обратите внимание: '.:/usr/src/app' означает, что текущая директория хоста
    # монтируется в /usr/src/app внутри контейнера, где находится ваш код.
    volumes:
      - .:/usr/src/app
    # Рабочая директория внутри контейнера.
    # Все команды, выполняемые для этого сервиса, будут выполняться из этой директории.
    working_dir: /usr/src/app
    # Команда, которая будет выполняться при запуске контейнера.
    # Это та же команда, которую вы используете для запуска приложения Node.js.
    command: npm start
    # Перезапускать контейнер всегда, если он останавливается.
    # Это полезно для обеспечения постоянной работы приложения.
    restart: always
