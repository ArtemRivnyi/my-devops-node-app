# .github/workflows/docker-build.yml

# Название рабочего процесса, которое будет отображаться в интерфейсе GitHub Actions.
name: Docker Image CI

# Определяет, когда этот рабочий процесс будет запускаться.
on:
  # Запускать при каждом push в ветку 'main'.
  push:
    branches: [ main ]
  # Запускать вручную из интерфейса GitHub Actions.
  workflow_dispatch:

# Задачи (jobs), которые будут выполняться в рамках этого рабочего процесса.
jobs:
  # Название задачи.
  build:
    # Тип раннера (виртуальной машины), на которой будет выполняться задача.
    runs-on: ubuntu-latest

    # Шаги (steps) для выполнения задачи.
    steps:
    # Шаг 1: Проверка кода.
    # Использует action 'actions/checkout@v4' для клонирования вашего репозитория
    # на раннер GitHub Actions.
    - name: Checkout repository
      uses: actions/checkout@v4

    # Шаг 2: Настройка Node.js.
    # Устанавливает Node.js на раннер для выполнения npm команд.
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Шаг 3: Установка зависимостей Node.js.
    # Устанавливает все зависимости проекта, включая devDependencies для тестов.
    - name: Install Node.js dependencies
      run: npm install

    # Шаг 4: Запуск тестов.
    # Выполняет Mocha с помощью 'npm exec', что является более надежным способом
    # запуска исполняемых файлов пакетов в CI/CD средах.
    - name: Run tests
      run: npm exec mocha # Изменено с 'npm test' на 'npm exec mocha'

    # Шаг 5: Настройка Docker Buildx.
    # Настраивает Buildx для эффективной сборки Docker-образов.
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Шаг 6: Вход в Docker Hub.
    # Использует секреты GitHub для безопасного входа в Docker Hub.
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # Имя пользователя из секрета GitHub
        password: ${{ secrets.DOCKER_PASSWORD }} # Пароль из секрета GitHub

    # Шаг 7: Сборка и публикация Docker-образа.
    # Собирает образ и публикует его в Docker Hub.
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true # Устанавливаем 'true' для публикации образа
        tags: ${{ secrets.DOCKER_USERNAME }}/my-devops-node-app:latest # Тег образа с вашим Docker ID
